{"summaries:376c9d82630f8dd7a6c42a3c5eee81682a3ef050":{"changes":[{"type":"feature","description":"Added logic to handle GitHub repositories other than the main one. This involves modifications in `generate-report.use-case.ts`, `summarize-commits.use-case.ts`, and `utils.ts` to accommodate different repository sources."}],"summary":"This commit introduces the capability to process commit data from GitHub repositories beyond the primary one. The changes span across three files: `use-cases/generate-report.use-case.ts` and `use-cases/summarize-commits.use-case.ts`, which now include logic to handle different repository contexts, as well as `utils.ts` which seems to contain helper functions to support this change. Specifically, `generate-report.use-case.ts` and `summarize-commits.use-case.ts` each had 3 lines inserted and 2 lines deleted. The `utils.ts` file had 7 new lines inserted to facilitate this functionality. This indicates a significant feature addition focused on expanding the scope of GitHub repository analysis.","called_tools":[]},"summaries:eda065268572f540aec9de0bff7f5363a0c0e758":{"changes":[{"type":"refactor","description":"The commit refactors the `index.ts` file by extracting the menu-related logic into a new service class `menu.service.ts`. This involves moving the menu data and functions responsible for menu management from `index.ts` to the newly created `menu.service.ts`. This significantly reduces the size of index.ts, improving readability and maintainability by isolating the menu functionality into a dedicated service. The menu service now encapsulates the state and actions of the menu, promoting better code organization, reusability, and testing."}],"summary":"This commit refactors the application by creating a dedicated `menu.service.ts` and moving menu logic from `index.ts` to it. This enhances code maintainability, separation of concerns, and improves modularity. The menu service encapsulates menu-related state and actions.","called_tools":[{"name":"file_diffs_tool","description":"The `file_diffs_tool` was used to get the changes of `index.ts` to understand the logic related to menu which was moved.","called_at":"2024-04-29T14:15:00"},{"name":"file_diffs_tool","description":"The `file_diffs_tool` was used to get the changes of `services/menu.service.ts` to understand the logic that was added in this new file.","called_at":"2024-04-29T14:15:02"}]},"summaries:5c8900fefb3be73a58b3d0b18acc1ff082c5d195":{"changes":[{"type":"refactor","description":"The index.ts file was refactored into multiple use cases. The original functionality was split into two separate use case files: generate-report.use-case.ts and summarize-commits.use-case.ts. This improves code organization and maintainability by separating concerns."},{"type":"refactor","description":"The use cases were refactored to use the progress bar service. This likely means that the logic for showing progress updates has been centralized and can be used in both the generate report and the summarize commits use cases"}],"summary":"This commit refactors the application by splitting the main index.ts file into two distinct use cases: generating a report and summarizing commits. This separation of concerns improves code organization and maintainability. Additionally, both use cases were refactored to use the progress bar service, which centralizes the progress update logic.","called_tools":[]},"summaries:f09934adfe8ece7d22efce8a427f90543703cde0":{"changes":[{"type":"feature","description":"A new progress bar service was created. This service allows for tracking and updating the progress of ongoing operations. The service exposes methods for starting, updating, and completing progress tracking, and it likely manages the state of the progress and any associated data."}],"summary":"This commit introduces a new feature: a progress bar service. The service was created with the purpose of tracking the progression of ongoing tasks. The files modified include the addition of the service in `services/progress.service.ts` and a modification in `package.json` with some new dependencies. The progress service provides methods for starting, updating, and finalizing progress tracking. This indicates that the service is designed to be flexible and adaptable to various types of progress tracking scenarios.","called_tools":[{"name":"file_diffs_tool","description":"The file_diffs_tool was called to get the diffs of the file services/progress.service.ts to analyze the changes.","called_at":"unknown"}]},"summaries:834899d9223493b1d749dcc1b892fa05929dddcc":{"changes":[{"type":"fix","description":"The commit fixes an issue in the json store factory. The specific changes involve modifications to the `json-store.factory.ts` file. The diffs show that 15 lines were inserted and 14 lines were deleted."}],"summary":"This commit addresses a bug within the json store factory, specifically in the `json-store.factory.ts` file. The changes involve a net change of 1 line, with 15 insertions and 14 deletions. The exact nature of the fix requires a detailed review of the code changes.","called_tools":[]},"summaries:4d8e5e111a5010a41752bf8798bec2cf7ec1c009":{"changes":[{"type":"refactor","description":"Refactored the report AI generator prompt logic. The changes involve moving the prompt generation from `reportGenerator.ts` to `reportAIGenerator.ts`. Also, removed unused code and updated the file structure in `reportAIGenerator.ts`, adding a new cache file `report-generation-appcache.json`, updated the file `json-local-cache.ts`, and removing obsolete files such as `.cache.json` and `spitha-blog'cache.json` and `spitha-blog-cache.json`."}],"summary":"This commit refactors the report AI generator prompt logic by moving the prompt generation from `reportGenerator.ts` to `reportAIGenerator.ts`. This involves significant changes in `reportAIGenerator.ts`, including the addition of a new cache file `report-generation-appcache.json` and updating the `json-local-cache.ts` file. Additionally, this commit removes obsolete files such as `.cache.json`, `spitha-blog'cache.json` and `spitha-blog-cache.json`. The file `reportGenerator.ts` had all of its lines deleted to move the prompt generation to the reportAIGenerator.","called_tools":[{"name":"file_diffs_tool","description":"The tool was called to get the diffs of the file reportAIGenerator.ts to analyze the code changes.","called_at":"now"},{"name":"file_diffs_tool","description":"The tool was called to get the diffs of the file reportGenerator.ts to analyze the code changes.","called_at":"now"}]},"summaries:680424a4e3b960df38a8ba70c48ddf28d7b1fc46":{"changes":[{"type":"feature","description":"Added a new factory for creating JSON stores. This factory is implemented in the `json-store.factory.ts` file and it's responsible for generating instances of json stores. The file `index.ts` was modified to export the newly created factory. This allows for a cleaner and more maintainable way to create and manage JSON stores."}],"summary":"This commit introduces a new `json-store.factory.ts` file which implements a factory for creating JSON store instances. The `index.ts` file was modified to export the new factory, allowing it to be used by other parts of the application. This change promotes better organization and maintainability of JSON store creation logic.","called_tools":[{"name":"file_diffs_tool","description":"Used to inspect changes in `json-store.factory.ts` to confirm a new factory was created. Additionally, it was used to inspect the change in `index.ts` file to verify that the json store factory is exported.","called_at":"2024-08-14T10:00:00Z"}]},"summaries:8b3c06bc20e6644582529ef1adb0ce12b6f8555c":{"changes":[{"type":"fix","description":"Multiple bug fixes were implemented across several files. Specifically, cache handling logic was corrected in '.cache.json' and 'json-local-cache.ts', potentially addressing issues related to data persistence. The commit includes fixes in 'commitFetcher.ts', likely modifying how commits are fetched or processed. 'index.ts' has seen substantial changes, suggesting that the core functionality has been updated. Additionally, schema updates were made in 'schemas.ts', and a new cache file 'spitha-blog'cache.json' was introduced, while 'use-cases/generate-report.use-case.ts' got some updates related to report generation."}],"summary":"This commit addresses multiple bugs across several files. The fixes include modifications to caching mechanisms in '.cache.json' and 'json-local-cache.ts', changes in commit fetching in 'commitFetcher.ts', updates to core functionality in 'index.ts', schema adjustments in 'schemas.ts', addition of a new cache file 'spitha-blog'cache.json', and adjustments in the report generation process in 'use-cases/generate-report.use-case.ts'. The changes suggest a broad effort to improve the stability and reliability of the application.","called_tools":[{"name":"file_diffs_tool","description":"The tool was called to get the diffs of the file .cache.json because it's one of the files with changes.","called_at":"2024-07-02T15:48:14"},{"name":"file_diffs_tool","description":"The tool was called to get the diffs of the file commitFetcher.ts because it's one of the files with changes.","called_at":"2024-07-02T15:48:15"},{"name":"file_diffs_tool","description":"The tool was called to get the diffs of the file index.ts because it's one of the files with changes.","called_at":"2024-07-02T15:48:15"},{"name":"file_diffs_tool","description":"The tool was called to get the diffs of the file json-local-cache.ts because it's one of the files with changes.","called_at":"2024-07-02T15:48:15"},{"name":"file_diffs_tool","description":"The tool was called to get the diffs of the file schemas.ts because it's one of the files with changes.","called_at":"2024-07-02T15:48:15"},{"name":"file_diffs_tool","description":"The tool was called to get the diffs of the file spitha-blog'cache.json because it's one of the files with changes.","called_at":"2024-07-02T15:48:15"},{"name":"file_diffs_tool","description":"The tool was called to get the diffs of the file use-cases/generate-report.use-case.ts because it's one of the files with changes.","called_at":"2024-07-02T15:48:15"}]},"summaries:79c5ac4b1d66ab2d700ce27711ae9c5580796a8d":{"changes":[{"type":"feature","description":"Implemented the core functionality of the AI report generator. This includes creating the `reportAIGenerator.ts` file, which houses the logic for interacting with the AI model to produce reports. Additionally, it involved modifications to several other files, such as `index.ts` to integrate the new report generator and `commitAIProcessorAgent.ts` and `commitFetcher.ts` to manage data retrieval and processing for the AI. The changes also involve schema updates in `schemas.ts` to accommodate the new report formats."}],"summary":"This commit introduces the core functionality for generating AI-powered reports, marked by the creation of `reportAIGenerator.ts` and extensive modifications across multiple files to facilitate data fetching, AI interaction, and report integration. The feature significantly enhances the project with automated report generation capabilities. The commit also includes schema updates to support the new report generation process.","called_tools":[]},"summaries:ee0cc17b3e2bb9bf1da4547e7b1cd2eeb71cf9af":{"changes":[{"type":"refactor","description":"The commit refactors the `index.ts` file by moving its code into separate files: `commitFetcher.ts`, `prompts.ts`, and `types.ts`. This significantly reduces the size of `index.ts` from 84 total changes to just 3 insertions, while the remaining code is moved into other files. `commitFetcher.ts` now contains code related to fetching commit data and has 6 total changes. `prompts.ts` is created and includes code related to prompts with 68 insertions. `types.ts` includes new types with 11 total changes. This indicates a move towards better modularity and separation of concerns."}],"summary":"This commit refactors the project by separating the code within `index.ts` into several new files. The core logic for fetching commit data is moved to `commitFetcher.ts`. Prompt related code is moved into `prompts.ts`, and type definitions are now located in `types.ts`. This refactoring improves code maintainability, readability, and separation of concerns by moving the majority of code from the main `index.ts` file into dedicated modules.","called_tools":[]},"summaries:bca819682609cdac9083222053b67b88b7be9bf5":{"changes":[{"type":"feature","description":"Implemented filtering of commits by username and date range. The user is prompted to select their preferred filters before applying them."}],"summary":"This commit introduces a new feature that allows users to filter commits based on the username of the author and a specified date range. The filtering options are presented to the user through prompts, allowing for a more flexible and customized commit analysis.","called_tools":[]},"summaries:a5259840d8578d35df8a0dcfb8eebae7fd28dbf2":{"changes":[{"type":"fix","description":"The commit addresses an issue related to standard error (stderr) handling. The changes were made in `commitFetcher.ts` with 73 insertions and 39 deletions, and also in `index.ts` with 2 insertions and 4 deletions. The changes in `commitFetcher.ts` likely involve modifications to how error streams are processed or directed when fetching commit information, while changes in `index.ts` were probably related to integrating or calling the function with stderr handling from `commitFetcher.ts`"}],"summary":"This commit focuses on fixing an issue with stderr handling. The core of the fix is located in the commitFetcher.ts file, which has undergone significant changes including additions and removals, indicating a revised error handling logic. There have also been minor adjustments to index.ts, likely to accommodate changes in the way errors are managed.","called_tools":[{"name":"file_diffs_tool","description":"The file_diffs_tool was called to get the code diffs of commitFetcher.ts and index.ts","called_at":"2024-03-08T16:10:00Z"}]},"summaries:f22e013234f2bf45265516337cc1314bbfe8222f":{"changes":[{"type":"fix","description":"The commit modifies the path parameter used to locate local repositories. This change ensures that the application correctly identifies and interacts with repositories that are not in the default location. The modifications included changes in `commitAIProcessorAgent.ts`, `commitFetcher.ts`, `commitSummary.ts`, and `index.ts`."}],"summary":"This commit addresses an issue related to how the application locates and processes local git repositories. Previously, the path parameter used for identifying repositories was not flexible enough to handle locations other than the default ones. The changes introduce in this commit fixes this limitation by modifying the path parameter logic in the `commitAIProcessorAgent.ts`, `commitFetcher.ts`, `commitSummary.ts` and `index.ts` files, allowing the application to interact with local git repositories located in different paths, enhancing the system's ability to work with varied development setups.","called_tools":[]},"summaries:bb77878c573bbd59f069a1d10fb59dbec2492696":{"changes":[{"type":"refactor","description":"The commit refactors the fetching logic, moving it from `commitAIProcessor.ts` to `commitFetcher.ts` and transforming the `commitAIProcessor` into an agent-based model named `commitAIProcessorAgent.ts`. This involves moving the core logic and creating a new class that uses tools for the AI processing of commits. Also, It includes changes to `index.ts` to import the new agent class, updating the `package.json` to add a new dependency and adding new files `json-local-cache.ts` and `schemas.ts`. The type definition file `types/commit.ts` was also updated. Finally, new utils were added to `utils.ts`."}],"summary":"This commit introduces a major refactor, converting the existing `commitAIProcessor` into an agent-based model. The core logic for fetching commits has been moved to `commitFetcher.ts`.  A new `commitAIProcessorAgent.ts` class was created to act as an agent with tools. The changes also include updates to `index.ts` to reflect the new agent and new dependencies were added to the `package.json` file and new files like `json-local-cache.ts` and `schemas.ts` were created. The type definition file `types/commit.ts` was updated, and new utilities were added in `utils.ts`. This refactor aims to improve the architecture by decoupling functionalities and make the AI processing more tool-driven.","called_tools":[]},"reports:2024-12-22":{"date":"2024-12-22T00:00:00Z","bulletPoints":[{"short":"Support for more GitHub Repositories","long":"The system can now gather information from multiple GitHub repositories, not just the main one. This allows for a broader view of project activities and contributions."},{"short":"Improved Navigation and Structure","long":"The way the application's menu works has been improved. This makes the app easier to navigate and more organized for users."},{"short":"Better Code Organization","long":"The main part of the application's code has been split into smaller, more manageable sections for generating reports and summarizing commits. This makes it easier to maintain and update the application."},{"short":"Progress Tracking","long":"A progress bar has been added to keep users informed about the progress of tasks. This gives better visibility into the ongoing process."},{"short":"Bug Fix for Data Storage","long":"A problem with how the application stores data was fixed, making it more reliable."},{"short":"AI Report Generation Improvements","long":"The process for creating AI-powered reports has been refined. The logic for generating the instructions for the AI has been moved to a better location making the system more efficient, and some old unnecessary files were removed."},{"short":"More Efficient Data Handling","long":"The application now uses a new method for creating and managing data stores, making it more efficient and organized."},{"short":"Multiple Bug Fixes","long":"Several small problems throughout the application were fixed. This makes the application more stable and reliable for users."},{"short":"Working AI Report Generator","long":"The system now has a fully functioning feature that creates reports using AI. This feature is a significant enhancement to the project offering advanced automated reporting."}]},"reports:2024-12-21":{"date":"2024-12-21T00:00:00Z","bulletPoints":[{"short":"Improved Code Organization","long":"The way our code is structured has been improved, making it easier for our team to maintain and update the software in the future. This is like organizing files in a folder for easy access and management."},{"short":"Filtering Options Added","long":"Users can now filter the commit history by the author's username and specific date ranges. This means it's now easier for users to find exactly what they're looking for when checking the history."},{"short":"Error Handling Improved","long":"The way the application handles errors has been improved, which should make it more reliable and easier to use. This reduces the chances of errors that could stop users from doing what they need."},{"short":"Support for More Repository Paths","long":"The tool can now work with projects stored in different locations on your computer, not just the standard places. This makes the tool more flexible and usable for different team setups."},{"short":"AI Processing is Now Smarter and More Flexible","long":"The system used for the AI processing now has a more flexible and tool-driven approach. This means the AI can be more precise and effective at processing commit data.  We also added a new local cache for faster processing."}]},"summaries:bb985518d494d5c5fa5b20ea14f197f00a731a60":{"changes":[{"type":"feature","description":"Added a LICENSE file to the repository. This file contains the terms and conditions under which the software can be used, modified, and distributed. The license text was added in its entirety as a single commit."}],"summary":"This commit introduces a LICENSE file to the repository. The license provides legal information regarding the usage and distribution of the software. The file was created with 21 lines of insertion, indicating the license text was added in full as a single commit. This is a standard practice for projects where licensing is important. No existing files were modified in the commit.","called_tools":[]},"summaries:626908b3d32bea26f055ff4aa7fdfeabad330f75":{"changes":[{"type":"feature","description":"Implemented fetching of commit information, including commit diffs and summaries. This includes modifications to the core logic, adding functionalities for fetching this information and generating a report based on them."},{"type":"feature","description":"Added the report generation functionality using the reportGenerator.ts, this file contains the core logic of how the report will be generated based on the commit information."}],"summary":"This commit introduces core features for fetching commit data, diffs, and summaries, and implements a report generation mechanism. The changes span across multiple files, including modifications to `.gitignore`, `commitAIProcessor.ts`, `commitSummary.ts`, `index.ts`, `package.json`, `pnpm-lock.yaml`, and the creation of `reportGenerator.ts`. The commit implements the core functionalities to retrieve commit information, and generate a report using this information. This is a Work in Progress commit.","called_tools":[]},"summaries:13833e8c013bd70581f954ad57081a8139ca9849":{"changes":[{"type":"feature","description":"Initial commit of the project. Added .gitignore, commitAIProcessor.ts, commitFetcher.ts, commitSummary.ts, index.ts, package.json, pnpm-lock.yaml, tsconfig.json, and types/commit.ts. These files represent the basic structure and initial code for the commit analysis tool. The commit includes configurations and basic files to run the project."}],"summary":"This commit initializes the project by adding all the necessary files. It includes the initial code for the commit analysis tool, a gitignore file, the package.json and pnpm-lock.yaml for dependency management, a tsconfig.json for TypeScript configuration, and type definitions for commit. The core logic for processing commits, fetching commit data, and summarizing commits are included in the corresponding files. This commit provides the foundational structure and code for the project.","called_tools":[]},"reports:2024-12-17":{"date":"2024-12-17T00:00:00Z","bulletPoints":[{"short":"Project Setup","long":"The project was initialized with all the basic files and code needed to start. This includes the core logic for the commit analysis tool and the necessary files for managing the project, like settings and dependencies. This means we have a functioning base to build upon and start analyzing code changes."},{"short":"Legal terms added","long":"A license has been added to the project, which outlines the legal conditions for using and sharing the software. This protects both the creators and the users by clarifying how the software can be used, ensuring everyone is aware of their rights and responsibilities."},{"short":"Core Features Implemented","long":"The key features for analyzing code changes have been added. This includes the ability to fetch information about commits, compare changes, and generate reports. While still a work in progress, this allows us to start extracting useful information from code changes and get them into a report format."}]}}